// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace || Editor || vim_mode == normal",
    "bindings": {
      "ctrl-/": "terminal_panel::ToggleFocus",
      "ctrl-shift-left": "workspace::ActivatePaneLeft",
      "ctrl-shift-right": "workspace::ActivatePaneRight",
      "ctrl-shift-up": "workspace::ActivatePaneUp",
      "ctrl-shift-down": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-shift-backspace": "workspace::CloseActiveDock",
      "ctrl-shift-alt-n": "project_symbols::Toggle"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "ctrl-shift-backspace": "pane::CloseActiveItem",
      "alt-shift-f10": "editor::SpawnNearestTask"
    }
  },
  {
    "context": "(Workspace || Editor) && vim_mode == normal",
    "bindings": {
      "ctrl-shift-o": "outline_panel::ToggleFocus",
      "ctrl-k": "agent::Keep",
      "ctrl-K": "agent::KeepAll",
      "ctrl-r": "agent::Reject",
      "ctrl-R": "agent::RejectAll",
      "'": "vim::RepeatFind",
      ";": ["vim::PushJump", { "line": true }]
    }
  },
  {
    "context": "VimControl && !Menu",
    "bindings": {
      "f": ["vim::PushFindForward", { "before": false, "multiline": false }],
      "t": ["vim::PushFindForward", { "before": true, "multiline": false }],
      "shift-f": [
        "vim::PushFindBackward",
        { "after": false, "multiline": false }
      ],
      "shift-t": [
        "vim::PushFindBackward",
        { "after": true, "multiline": false }
      ],
      "Y": ["workspace::SendKeystrokes", "y $"]
    }
  },
  {
    "context": "Pane || Editor",
    "bindings": {
      "alt-left": "pane::ActivatePreviousItem",
      "alt-right": "pane::ActivateNextItem",
      "alt-backspace": "pane::CloseActiveItem",
      "alt-shift-backspace": "workspace::CloseInactiveTabsAndPanes"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "Home": "vim::FirstNonWhitespace",
      "ctrl-n": "editor::ShowEditPrediction",
      "ctrl-j": "editor::AcceptEditPrediction",
      "ctrl-l": "editor::AcceptPartialEditPrediction",
      "alt-enter": "editor::ToggleCodeActions",
      "ctrl-shift-alt-up": "vim::SelectLargerSyntaxNode",
      "ctrl-shift-alt-down": "vim::SelectSmallerSyntaxNode"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "d": "project_panel::Delete",
      "r": "project_panel::Rename",
      "y": "project_panel::Copy",
      "x": "project_panel::Cut",
      "p": "project_panel::Paste",
      "P": "project_panel::Open",
      "c": "workspace::CopyPath",
      "q": "workspace::CloseActiveDock",
      "G": "project_panel::ToggleHideGitIgnore",
      "backspace": "project_panel::SelectParent"
    }
  },
  {
    "context": "Editor && edit_prediction",
    "bindings": {
      "tab": null
    }
  }
]
